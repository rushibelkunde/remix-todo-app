// schema.prisma

generator client {
  provider = "prisma-client-js"
}

// Define your database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

// Define your User model with UUID
model User {
  uid      String @id @default(uuid())
  name     String
  username String @unique
  pass     String
  todos     Todo[]
  categories Category[]
  subTodos  SubTodo[]
}

// Define your Todo model with UUID
model Todo {
  id          String    @id @default(uuid())
  user_id     String
  title       String
  completed   Boolean   @default(false)
  category_id String?
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  user        User      @relation(fields: [user_id], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  category    Category? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  subTodos     SubTodo[]
}

// Define your Category model with UUID
model Category {
  id            String @id @default(uuid())
  user_id       String
  category_name String
  display_name  String
  user          User   @relation(fields: [user_id], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  Todos          Todo[]
}

// Define your SubTodo model with UUID
model SubTodo {
  id         String   @id @default(uuid())
  user_id    String
  todo_id    String
  title      String
  completed  Boolean  @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  todo       Todo     @relation(fields: [todo_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
